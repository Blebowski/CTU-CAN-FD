<?xml version="1.0" encoding="UTF-8"?>
<ipxact:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014" xmlns:kactus2="http://kactus2.cs.tut.fi" xmlns:ctuCAN="https://gitlab.fel.cvut.cz/canbus/ctucanfd_ip_core" xsi:schemaLocation="http://www.accellera.org/XMLSchema/IPXACT/1685-2014 http://www.accellera.org/XMLSchema/IPXACT/1685-2014/index.xsd">
	<ipxact:vendor>CTU</ipxact:vendor>
	<ipxact:library>ip</ipxact:library>
	<ipxact:name>CAN_FD_IP_Core</ipxact:name>
	<ipxact:version>2.1</ipxact:version>
	<ipxact:memoryMaps>
		<ipxact:memoryMap>
			<ipxact:name>CAN_Registers</ipxact:name>
			<ipxact:displayName>CAN FD Core memory map</ipxact:displayName>
			<ipxact:description>CTU CAN FD is designed as 32 bit peripheria with support for 8, 16 or 32 bit access. Unaligned access is not supported. Byte or half word access is executed via byte enable signal. The memory is organized as Big endian. Write to read only memory location will have no effect. Read from write only memory location will return zeroes. The memory map consists of following memory regions:</ipxact:description>
			<ipxact:addressBlock>
				<ipxact:name>Control_registers</ipxact:name>
				<ipxact:displayName>Control registers</ipxact:displayName>
				<ipxact:description>Control registers memory region.</ipxact:description>
				<ipxact:baseAddress>'h0</ipxact:baseAddress>
				<ipxact:range>256</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:usage>register</ipxact:usage>
				<ipxact:volatile>true</ipxact:volatile>
				<ipxact:register>
					<ipxact:name>DEVICE_ID</ipxact:name>
					<ipxact:displayName>DEVICE ID</ipxact:displayName>
					<ipxact:description>Identifer of CTU CAN FD. Can be used to check if CTU CAN FD is accessible correctly on its base address.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>DEVICE_ID</ipxact:name>
						<ipxact:displayName>DEVICE_ID</ipxact:displayName>
						<ipxact:description>Device ID</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'hCAFD</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>16</ipxact:bitWidth>
						<ipxact:access>read-only</ipxact:access>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>CTU_CAN_FD_ID</ipxact:name>
								<ipxact:displayName>CTU_CAN_FD_DEVICE_ID</ipxact:displayName>
								<ipxact:description>Identifier of CTU CAN FD IP Core.</ipxact:description>
								<ipxact:value>'hCAFD</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>MODE</ipxact:name>
					<ipxact:displayName>MODE</ipxact:displayName>
					<ipxact:description>Controls CTU CAN FD modes.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>RST</ipxact:name>
						<ipxact:displayName>RST</ipxact:displayName>
						<ipxact:description>Soft reset. Writing logic 1 resets CTU CAN FD. After writing logic 1,  logic 0 does not need to be written, this bit is automatically cleared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FDE</ipxact:name>
						<ipxact:displayName>FDE</ipxact:displayName>
						<ipxact:description>Flexible data rate enable. When disabled, receiving recessive FDF(EDL) bit (CAN FD frame) causes Form error. This bit does not affect capability to transmitt CAN FD frames, however error frame will be also transmitted after FDF(EDL) bit.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>FDE_ENABLE</ipxact:name>
								<ipxact:displayName>FDE_ENABLE</ipxact:displayName>
								<ipxact:description>Flexible data-rate support enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>FDE_DISABLE</ipxact:name>
								<ipxact:displayName>FDE_DISABLE</ipxact:displayName>
								<ipxact:description>Flexible data-rate support disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ACF</ipxact:name>
						<ipxact:displayName>ACF</ipxact:displayName>
						<ipxact:description>Acknowledge Forbidden Mode. When enabled, acknowledge is not sent even if received CRC matches the calculated one.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ACF_ENABLED</ipxact:name>
								<ipxact:displayName>ACF_ENABLED</ipxact:displayName>
								<ipxact:description>Acknowledge forbidden mode enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ACF_DISABLED</ipxact:name>
								<ipxact:displayName>ACF_DISABLED</ipxact:displayName>
								<ipxact:description>Acknowledge forbidden mode disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>LOM</ipxact:name>
						<ipxact:displayName>LOM</ipxact:displayName>
						<ipxact:description>Listen Only Mode. In this mode CTU CAN FD only receives data and sends only recessive bits on the bus. When a dominant bus is sent, it is re-routed internally so that bus value remains the same. Note that when this mode is enabled controller will not transmit any inserted frame!</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>LOM_ENABLED</ipxact:name>
								<ipxact:displayName>LOM_ENABLED</ipxact:displayName>
								<ipxact:description>Listen only mode enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>LOM_DISABLED</ipxact:name>
								<ipxact:displayName>LOM_DISABLED</ipxact:displayName>
								<ipxact:description>Listen only mode disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>STM</ipxact:name>
						<ipxact:displayName>STM</ipxact:displayName>
						<ipxact:description>Self Test Mode. In this mode transmitted frame is considered valid even if acknowledge was not received.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>STM_ENABLED</ipxact:name>
								<ipxact:displayName>STM_ENABLED</ipxact:displayName>
								<ipxact:description>Self test mode enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>STM_DISABLED</ipxact:name>
								<ipxact:displayName>STM_DISABLED</ipxact:displayName>
								<ipxact:description>Self test mode disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>AFM</ipxact:name>
						<ipxact:displayName>AFM</ipxact:displayName>
						<ipxact:description>Acceptance Filters Mode. If enabled, only RX frames which pass Frame filters are stored in RX buffer. If disabled, every received frame is stored in RX buffer. This bit has meaning only if there is at least one filter synthesized. Otherwise, this bit is reserved.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>AFM_ENABLED</ipxact:name>
								<ipxact:displayName>AFM_ENABLED</ipxact:displayName>
								<ipxact:description>Acceptance filter mode enabled</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>AFM_DISABLED</ipxact:name>
								<ipxact:displayName>AFM_DISABLED</ipxact:displayName>
								<ipxact:description>Acceptance filter mode disabled</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TSTM</ipxact:name>
						<ipxact:description>Test Mode. In test mode several registers have special features. Reffer to description of Test mode for further details.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>COMMAND</ipxact:name>
					<ipxact:displayName>COMMAND</ipxact:displayName>
					<ipxact:description>Issuing commands to CTU CAN FD. Writing logic 1 to each bit gives a command to CTU CAN FD. After writing logic 1, logic 0 does not need to be written.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'hC</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>write-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RRB</ipxact:name>
						<ipxact:displayName>RRB</ipxact:displayName>
						<ipxact:description>Release RX Buffer. This command deletes all frames from the RX buffer and restarts its memory pointers.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>CDO</ipxact:name>
						<ipxact:displayName>CDO</ipxact:displayName>
						<ipxact:description>Clear Data Overrun flag in RX buffer.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ERCRST</ipxact:name>
						<ipxact:displayName>ERCRST</ipxact:displayName>
						<ipxact:description>Error Counters Reset. When unit is bus off, issuing this command will request erasing TX, RX error counters after 128 consecutive ocurrences of 11 recessive bits. Upon completion, TX and RX Error counters are erased and fault confinement state is set to Error Active. When unit is not bus off or when unit is bus off due to being disabled (SETTINGS[ENA] = '0'), this command has no effect.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RXFCRST</ipxact:name>
						<ipxact:displayName>RXFCRST</ipxact:displayName>
						<ipxact:description>Clear RX bus traffic counter (RX_COUNTER).</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXFCRST</ipxact:name>
						<ipxact:displayName>TXFCRST</ipxact:displayName>
						<ipxact:description>Clear TX bus traffic counter (TX_COUNTER).</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>STATUS</ipxact:name>
					<ipxact:displayName>STATUS</ipxact:displayName>
					<ipxact:description>Status register contains state of CTU CAN FD. Logic 1 signals active status/flag.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h8</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RXNE</ipxact:name>
						<ipxact:displayName>RXNE</ipxact:displayName>
						<ipxact:description>RX buffer not empty.  Active when at least one frame is stored in RX buffer.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXNF</ipxact:name>
						<ipxact:displayName>TXNF</ipxact:displayName>
						<ipxact:description>TXT buffers status. Active if at least one  TXT buffer is in &quot;Empty&quot; state.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DOR</ipxact:name>
						<ipxact:displayName>DOR</ipxact:displayName>
						<ipxact:description>Data Overrun Status (flag). A frame was lost due to insufficient space in RX buffer. This bit can be cleared by COMMAND[RRB].</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>EFT</ipxact:name>
						<ipxact:displayName>EFT</ipxact:displayName>
						<ipxact:description>Error frame is being transmitted.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RXS</ipxact:name>
						<ipxact:displayName>RXS</ipxact:displayName>
						<ipxact:description>CTU CAN FD is receiving CAN Frame.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXS</ipxact:name>
						<ipxact:displayName>TXS</ipxact:displayName>
						<ipxact:description>CTU CAN FD is transmitting CAN Frame.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>EWL</ipxact:name>
						<ipxact:displayName>EWL</ipxact:displayName>
						<ipxact:description>TX Error counter (TEC) or RX Error counter (REC) is equal to or higher than Error warning limit (EWL).</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>IDLE</ipxact:name>
						<ipxact:displayName>IDLE</ipxact:displayName>
						<ipxact:description>Bus is idle (no frame being transmitted/received) or CTU CAN FD is bus off.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>SETTINGS</ipxact:name>
					<ipxact:displayName>SETTINGS</ipxact:displayName>
					<ipxact:description>Settings of CTU CAN FD.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h6</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>RTRLE</ipxact:name>
						<ipxact:displayName>RTRLE</ipxact:displayName>
						<ipxact:description>Retransmitt Limit Enable. If enabled, CTU CAN FD only attempts to transmitt each frame up to RTR_TH times.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>RTRLE_ENABLED</ipxact:name>
								<ipxact:displayName>RTRLE_ENABLED</ipxact:displayName>
								<ipxact:description>Retransmitt limit is enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>RTRLE_DISABLED</ipxact:name>
								<ipxact:displayName>RTRLE_DISABLED</ipxact:displayName>
								<ipxact:description>Retransmitt limit is disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RTRTH</ipxact:name>
						<ipxact:displayName>RTRTH</ipxact:displayName>
						<ipxact:description>Retransmitt Limit Threshold. Maximal amount of retransmission attempts when SETTINGS[RTRLE] is enabled.</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>4</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ILBP</ipxact:name>
						<ipxact:displayName>ILBP</ipxact:displayName>
						<ipxact:description>Internal Loop-Back. When enabled, CTU CAN FD receives any frame it transmitts.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>INT_LOOP_DISABLED</ipxact:name>
								<ipxact:displayName>INT_LOOP_DISABLED</ipxact:displayName>
								<ipxact:description>Internal loop-back is disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>INT_LOOP_ENABLED</ipxact:name>
								<ipxact:displayName>INT_LOOP_ENABLED</ipxact:displayName>
								<ipxact:description>Internal loop-back is enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ENA</ipxact:name>
						<ipxact:displayName>ENA</ipxact:displayName>
						<ipxact:description>Enable of CTU CAN FD. When disabled, IP Core acts as if not connected to CAN Bus.</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>CTU_CAN_ENABLED</ipxact:name>
								<ipxact:displayName>CTU_CAN_ENABLED</ipxact:displayName>
								<ipxact:description>The CAN Core is enabled.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>CTU_CAN_DISABLED</ipxact:name>
								<ipxact:displayName>CTU_CAN_DISABLED</ipxact:displayName>
								<ipxact:description>The CAN Core is disabled.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>NISOFD</ipxact:name>
						<ipxact:displayName>NISOFD</ipxact:displayName>
						<ipxact:description>Non ISO FD. When active CTU CAN FD is compliant to NON-ISO CAN FD specification (no stuff count field). This bit should be modified only when SETTINGS[ENA]=0.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ISO_FD</ipxact:name>
								<ipxact:displayName>ISO_FD</ipxact:displayName>
								<ipxact:description>The CAN Controller conforms to ISO CAN FD specification.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>NON_ISO_FD</ipxact:name>
								<ipxact:displayName>NON_ISO_FD</ipxact:displayName>
								<ipxact:description>The CAN Controller conforms to NON ISO CAN FD specification.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>INT_STAT</ipxact:name>
					<ipxact:displayName>INT_STAT</ipxact:displayName>
					<ipxact:description>Interrupt Status register. Reading this register returns logic 1 for each interrupt which ocurred. Writing logic 1 to any bit clears according interrupt status. Writing logic 0 has no effect.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h10</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-writeOnce</ipxact:access>
					<ipxact:field>
						<ipxact:name>RXI</ipxact:name>
						<ipxact:displayName>RXI</ipxact:displayName>
						<ipxact:description>Frame Received Interrupt.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXI</ipxact:name>
						<ipxact:displayName>TXI</ipxact:displayName>
						<ipxact:description>Frame Transmitted Interrupt. </ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>EWLI</ipxact:name>
						<ipxact:displayName>EWLI</ipxact:displayName>
						<ipxact:description>Error Warning Limit interrupt. When both TEC and REC are lower than EWL and one of the becomes equal to or higher than EWL, or when both TEC and REC become less than EWL, condition for this interrupt is valid. When Interrupt is cleared and RXC, or TXC is still equal to or higher than EWL, Interrupt is not set again.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DOI</ipxact:name>
						<ipxact:displayName>DOI</ipxact:displayName>
						<ipxact:description>Data Overrun on RX Buffer Interrupt. Before this interrupt is cleared , STATUS[DOR] must be cleared to avoid setting of this interrupt again.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FCSI</ipxact:name>
						<ipxact:displayName>FCSI</ipxact:displayName>
						<ipxact:description>Fault confinement state changed Interrupt. Interrupt is set when node turns Error Passive (from Error Active), Bus Off (from Error Passive) or Error Active (from Bus off after reintegration or from Error Passive).</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ALI</ipxact:name>
						<ipxact:displayName>ALI</ipxact:displayName>
						<ipxact:description>Arbitration Lost Interrupt.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BEI</ipxact:name>
						<ipxact:displayName>BEI</ipxact:displayName>
						<ipxact:description>Bus Error interrupt.</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RXFI</ipxact:name>
						<ipxact:displayName>RXFI</ipxact:displayName>
						<ipxact:description>RX buffer Full interrupt.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BSI</ipxact:name>
						<ipxact:displayName>BSI</ipxact:displayName>
						<ipxact:description>Bit-Rate shifted interrupt.</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RBNEI</ipxact:name>
						<ipxact:displayName>RBNEI</ipxact:displayName>
						<ipxact:description>RX buffer not empty interrupt. Clearing this interrupt and not reading out content of RX Buffer via RX_DATA will re-activate the interrupt.</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>OFI</ipxact:name>
						<ipxact:description>Overload frame Interrupt.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXBHCI</ipxact:name>
						<ipxact:displayName>TXBHCI</ipxact:displayName>
						<ipxact:description>TX Buffer HW command interrupt. Anytime TX Buffer receives HW command from CAN Core which changes TXT Buffer state to TX Ok, Error or Aborted, this interrupt will be acivated.</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_SETTINGS</ipxact:name>
					<ipxact:displayName>RX_SETTINGS</ipxact:displayName>
					<ipxact:description>Settings of RX buffer FIFO.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h6A</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>RTSOP</ipxact:name>
						<ipxact:displayName>RTSOP</ipxact:displayName>
						<ipxact:description>Receive buffer Timestamp option. This register should be modified only when SETTINGS[ENA]=0.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>RTS_END</ipxact:name>
								<ipxact:displayName>RTS_END</ipxact:displayName>
								<ipxact:description>Timestamp of received frame in RX FIFO is captured in last bit of EOF field.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>RTS_BEG</ipxact:name>
								<ipxact:displayName>RTS_BEG</ipxact:displayName>
								<ipxact:description>Timestamp of received frame in RX FIFO is captured in SOF field.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>INT_ENA_CLR</ipxact:name>
					<ipxact:displayName>INT_ENA_CLR</ipxact:displayName>
					<ipxact:description>Interrupt Enable Clear register. Writing logic 1 disables according interrupt. Writing logic 0 has no effect. Reading this register has no effect. Disabled interrupt wil not cause interrupt to be raised by CTU CAN FD even if it is captured in Interrupt status register.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h18</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>write-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>INT_ENA_CLR</ipxact:name>
						<ipxact:displayName>INT_ENA_CLR</ipxact:displayName>
						<ipxact:description>Bit meaning is equivalent to register INT_STAT.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>INT_MASK_CLR</ipxact:name>
					<ipxact:displayName>INT_MASK_CLR</ipxact:displayName>
					<ipxact:description>Interrupt Mask clear register. Writing logic 1 un-masks according interrupt. Writing logic 0 has no effect. Reading this register has no effect. If particular interrupt is un-masked, it will be captured in INT_STAT register when internal conditions for this interrupt are met (e.g RX buffer is not empty for RXNEI).</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h20</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>write-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>INT_MASK_CLR</ipxact:name>
						<ipxact:displayName>INT_MASK_CLR</ipxact:displayName>
						<ipxact:description>Bit meaning is equivalent to register INT_STAT.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>INT_MASK_SET</ipxact:name>
					<ipxact:displayName>INT_MASK_SET</ipxact:displayName>
					<ipxact:description>Interrupt Mask set. Writing logic 1 masks according interrupt. Writing logic 0 has no effect. Reading this register returns logic 1 for each masked interrupt. If particular interrupt is masked, it won't be captured in INT_STAT register when internal conditions for this interrupt are met (e.g RX buffer is not empty for RXNEI).</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h1C</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-writeOnce</ipxact:access>
					<ipxact:field>
						<ipxact:name>INT_MASK_SET</ipxact:name>
						<ipxact:displayName>INT_MASK_SET</ipxact:displayName>
						<ipxact:description>Bit meaning is equivalent to register INT_STAT.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>INT_ENA_SET</ipxact:name>
					<ipxact:displayName>INT_ENA_SET</ipxact:displayName>
					<ipxact:description>Interrupt Enable Set. Writing logic 1 to a bit enables according interrupt. Writing logic 0 has no effect. Reading this register returns logic 1 for each enabled interrupt. If interrupt is captured in INT_STAT, enabled interrupt will cause CTU CAN FD to raise interrupt. Interrupts are level-based, it remains active until Interrupt status is cleared or interrupt is disabled.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h14</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-writeOnce</ipxact:access>
					<ipxact:field>
						<ipxact:name>INT_ENA_SET</ipxact:name>
						<ipxact:displayName>INT_ENA_SET</ipxact:displayName>
						<ipxact:description>Bit meaning is equivalent to register INT_STAT.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>BTR_FD</ipxact:name>
					<ipxact:displayName>BTR_FD</ipxact:displayName>
					<ipxact:description>Bit Timing Register for data bit rate. This register can be modified only when SETTINGS[ENA]=0.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h28</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>PH2_FD</ipxact:name>
						<ipxact:displayName>PH2_FD</ipxact:displayName>
						<ipxact:description>Phase 2 segment</ipxact:description>
						<ipxact:bitOffset>13</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>3</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PROP_FD</ipxact:name>
						<ipxact:displayName>PROP_FD</ipxact:displayName>
						<ipxact:description>Propagation segment</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>3</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>6</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PH1_FD</ipxact:name>
						<ipxact:displayName>PH1_FD</ipxact:displayName>
						<ipxact:description>Phase 1 segment</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>3</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BRP_FD</ipxact:name>
						<ipxact:description>Bit rate prescaler</ipxact:description>
						<ipxact:bitOffset>19</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>4</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SJW_FD</ipxact:name>
						<ipxact:description>Synchronisation jump width</ipxact:description>
						<ipxact:bitOffset>27</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>2</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>VERSION</ipxact:name>
					<ipxact:displayName>VERSION</ipxact:displayName>
					<ipxact:description>Version register. Returns version of CTU CAN FD.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h2</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>VER_MINOR</ipxact:name>
						<ipxact:displayName>MINOR</ipxact:displayName>
						<ipxact:description>Minor part of CTU CAN FD version. E.g for version 2.1 this field has value 0x01.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>VER_MAJOR</ipxact:name>
						<ipxact:displayName>MAJOR</ipxact:displayName>
						<ipxact:description>Minor part of CTU CAN FD version. E.g for version 2.1 this field has value 0x02.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>BTR</ipxact:name>
					<ipxact:displayName>BTR</ipxact:displayName>
					<ipxact:description>Bit Timing Register for nominal bit rate. This register should be modified only when SETTINGS[ENA]=0.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h24</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>PROP</ipxact:name>
						<ipxact:displayName>PROP</ipxact:displayName>
						<ipxact:description>Propagation segment</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>5</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>7</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PH1</ipxact:name>
						<ipxact:displayName>PH1</ipxact:displayName>
						<ipxact:description>Phase 1 segment</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>3</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>6</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PH2</ipxact:name>
						<ipxact:displayName>PH2</ipxact:displayName>
						<ipxact:description>Phase 2 segment</ipxact:description>
						<ipxact:bitOffset>13</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>5</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>6</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BRP</ipxact:name>
						<ipxact:description>Bit rate prescaler</ipxact:description>
						<ipxact:bitOffset>19</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'hA</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SJW</ipxact:name>
						<ipxact:description>Synchronisation jump width</ipxact:description>
						<ipxact:bitOffset>27</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>2</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>ALC</ipxact:name>
					<ipxact:displayName>ALC</ipxact:displayName>
					<ipxact:description>Arbitration Lost Capture register. Determines position of last arbitration loss within CAN frame.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h7E</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>ALC_BIT</ipxact:name>
						<ipxact:displayName>ALC_BIT</ipxact:displayName>
						<ipxact:description>Arbitration lost capture bit position. If ALC_ID_FIELD = ALC_BASE_ID  then bit index of BASE identifier in which arbitration was lost is given as: 11 - ALC_VAL. If ALC_ID_FIELD = ALC_EXTENSION  then bit index of EXTENDED identifier in which arbitration was lost is given as: 18 - ALC_VAL. For other values of ALC_ID_FIELD, this value is undefined.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ALC_ID_FIELD</ipxact:name>
						<ipxact:displayName>ALC_ID_FIELD</ipxact:displayName>
						<ipxact:description>Part of CAN Identifier in which arbitration was lost.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_BASE_ID</ipxact:name>
								<ipxact:displayName>ALC_BASE_ID</ipxact:displayName>
								<ipxact:description>Arbitration was lost during base identifier.</ipxact:description>
								<ipxact:value>01</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_SRR_RTR</ipxact:name>
								<ipxact:displayName>ALC_SRR_RTR</ipxact:displayName>
								<ipxact:description>Arbitration was lost during first bit after base identifier (SRR of Extended Frame, RTR bit of CAN 2.0 Base Frame)</ipxact:description>
								<ipxact:value>02</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_IDE</ipxact:name>
								<ipxact:displayName>ALC_IDE</ipxact:displayName>
								<ipxact:description>Arbitration was lost during IDE bit.</ipxact:description>
								<ipxact:value>03</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_EXTENSION</ipxact:name>
								<ipxact:displayName>ALC_EXTENSION</ipxact:displayName>
								<ipxact:description>Arbitration was lost during Identifier extension.</ipxact:description>
								<ipxact:value>04</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_RTR</ipxact:name>
								<ipxact:displayName>ALC_RTR</ipxact:displayName>
								<ipxact:description>Arbitration was lost during RTR bit after Identifier extension!</ipxact:description>
								<ipxact:value>05</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ALC_RSVD</ipxact:name>
								<ipxact:displayName>ALC_RSVD</ipxact:displayName>
								<ipxact:description>Unit did not loose arbitration since last reset.</ipxact:description>
								<ipxact:value>00</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>EWL</ipxact:name>
					<ipxact:displayName>EWL</ipxact:displayName>
					<ipxact:description>Error Warning Limit register. This register should be modified only when SETTINGS[ENA]=0.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h2C</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>EW_LIMIT</ipxact:name>
						<ipxact:displayName>EW_LIMIT</ipxact:displayName>
						<ipxact:description>Error warning limit.  If error warning limit is reached interrupt can be fired. Error warning limit indicates heavily disturbed bus.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>96</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>ERP</ipxact:name>
					<ipxact:displayName>ERP</ipxact:displayName>
					<ipxact:description>Error Passive Limit register. This register should be modified only when SETTINGS[ENA]=0.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h2D</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>ERP_LIMIT</ipxact:name>
						<ipxact:displayName>ERP_LIMIT</ipxact:displayName>
						<ipxact:description>Error Passive Limit. When one of error counters (RXC/TXC) exceeds this value, Fault confinement state changes to error passive. Note that CTU CAN FD always turns to bus_off once any error counter reaches 255!</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>128</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FAULT_STATE</ipxact:name>
					<ipxact:displayName>FAULT_STATE</ipxact:displayName>
					<ipxact:description>Fault Confinement state of the CTU CAN FD.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h2E</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>ERP</ipxact:name>
						<ipxact:displayName>ERP</ipxact:displayName>
						<ipxact:description>Error passive</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BOF</ipxact:name>
						<ipxact:displayName>BOF</ipxact:displayName>
						<ipxact:description>Bus off</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ERA</ipxact:name>
						<ipxact:displayName>ERA</ipxact:displayName>
						<ipxact:description>Error active</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_A_VAL</ipxact:name>
					<ipxact:displayName>FILTER_A_VAL</ipxact:displayName>
					<ipxact:description>Filter A Bit value. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter A is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_09846e1a_b03a_4f0b_99b5_c1981400ea9e</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h40</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_VAL_A_VAL</ipxact:name>
						<ipxact:displayName>BIT_VAL_A_VAL</ipxact:displayName>
						<ipxact:description>Bit Value for acceptance filters to be compared with income identifier. Only bits set in according to FILTER_A_MASK register are compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_STATUS</ipxact:name>
					<ipxact:displayName>FILTER_STATUS</ipxact:displayName>
					<ipxact:description>Filter Status indicates if Frame filters are available.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h5E</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>SFA</ipxact:name>
						<ipxact:displayName>SUP_FILTA</ipxact:displayName>
						<ipxact:description>Logic 1 when Filter A is available. Otherwise logic 0.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SFB</ipxact:name>
						<ipxact:displayName>SUP_FILTB</ipxact:displayName>
						<ipxact:description>Logic 1 when Filter B is available. Otherwise logic 0.</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SFR</ipxact:name>
						<ipxact:displayName>SUP_RANGE</ipxact:displayName>
						<ipxact:description>Logic 1 when Range Filter is available. Otherwise logic 0.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SFC</ipxact:name>
						<ipxact:displayName>SUP_FILTC</ipxact:displayName>
						<ipxact:description>Logic 1 when Filter C is available. Otherwise logic 0.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TX_PRIORITY</ipxact:name>
					<ipxact:displayName>TX_PRIORITY</ipxact:displayName>
					<ipxact:description>Priority of TXT buffers. Always highest priority TXT buffer in Ready state is selected for transmission. If two TXT buffers have equal priorities, TXT buffer with lower index is selected.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h78</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>TXT1P</ipxact:name>
						<ipxact:displayName>TXT1P</ipxact:displayName>
						<ipxact:description>Priority of TXT buffer 1.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXT2P</ipxact:name>
						<ipxact:displayName>TXT2P</ipxact:displayName>
						<ipxact:description>Priority of TXT buffer 2.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXT3P</ipxact:name>
						<ipxact:displayName>TXT3P</ipxact:displayName>
						<ipxact:description>Priority of TXT buffer 3.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXT4P</ipxact:name>
						<ipxact:displayName>TXT4P</ipxact:displayName>
						<ipxact:description>Priority of TXT buffer 4.</ipxact:description>
						<ipxact:bitOffset>12</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TX_COMMAND</ipxact:name>
					<ipxact:displayName>TX_COMMAND</ipxact:displayName>
					<ipxact:description>Command register for TXT buffers. Command is activated by writing logic 1 to TXC(E,R,A) bit. TXT buffer that receives the command is selected by setting bit TXBI(1..4) to logic 1. Command and index must be set by single access. Register is automatically erased upon the command completion. Reffer to description of TXT buffer and TXT buffer State machine. If TXCE and TXCR are applied simultaneously, only TXCE command is applied. If multiple commands are applied at once, only those which have effect in immediate state of TXT buffer are applied to the buffer.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h74</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>write-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TXCE</ipxact:name>
						<ipxact:displayName>TXCE</ipxact:displayName>
						<ipxact:description>Activates &quot;set_empty&quot; command. Transits frone TX Done, TX Error or TX Aborted to Done. Does not have any effect in other states.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXCR</ipxact:name>
						<ipxact:displayName>TXCR</ipxact:displayName>
						<ipxact:description>Activates &quot;set_ready&quot; command. Transits frone TX Done, TX Error, TX Aborted or Empty to Ready. Does not have any effect in other states.</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXCA</ipxact:name>
						<ipxact:displayName>TXCA</ipxact:displayName>
						<ipxact:description>Activates &quot;set_abort&quot; command. Transits from Ready to TX Aborted. If transmission is in progress (state TX in Progress) from the buffer, transits to TX Aborted if current transmission is not succesfull. If the transmission is sucesfull, it has no effect. Does not have any effect in other states.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXB1</ipxact:name>
						<ipxact:displayName>TXB1</ipxact:displayName>
						<ipxact:description>Command is applied on TXT Buffer 1.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXB2</ipxact:name>
						<ipxact:displayName>TXB2</ipxact:displayName>
						<ipxact:description>Command is applied on TXT Buffer 2.</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXB3</ipxact:name>
						<ipxact:displayName>TXB3</ipxact:displayName>
						<ipxact:description>Command is applied on TXT Buffer 3.</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TXB4</ipxact:name>
						<ipxact:displayName>TXB4</ipxact:displayName>
						<ipxact:description>Command is applied on TXT Buffer 4.</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TIMESTAMP_HIGH</ipxact:name>
					<ipxact:displayName>TIMESTAMP_HIGH</ipxact:displayName>
					<ipxact:description>Register with current value of CTU CAN FD time base. Bits 63:32 of time base are available from this register. No shadowing is implemented on TIMESTAMP_LOW/HIGH registers and user has to take care of proper read from both registers, since overflow of TIMESTAMP_LOW might occur between read of TIMESTAMP_LOW and TIMESTAMP_HIGH.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h98</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TIMESTAMP_HIGH</ipxact:name>
						<ipxact:displayName>TIMESTAMP_HIGH</ipxact:displayName>
						<ipxact:description>Bits 63:32 of time base.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
						<ipxact:access>read-only</ipxact:access>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TIMESTAMP_LOW</ipxact:name>
					<ipxact:displayName>TIMESTAMP_LOW</ipxact:displayName>
					<ipxact:description>Register with current value of CTU CAN FD time base. Bits 31:0 of time base are available from this register. No shadowing is implemented on TIMESTAMP_LOW/HIGH registers and user has to take care of proper read from both registers, since overflow of TIMESTAMP_LOW might occur between read of TIMESTAMP_LOW and TIMESTAMP_HIGH.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h94</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TIMESTAMP_LOW</ipxact:name>
						<ipxact:displayName>TIMESTAMP_LOW</ipxact:displayName>
						<ipxact:description>Bits 31:0 of time base.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
						<ipxact:access>read-only</ipxact:access>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>YOLO_REG</ipxact:name>
					<ipxact:displayName>YOLO_REG</ipxact:displayName>
					<ipxact:description>Register for fun :)</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h90</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>YOLO_VAL</ipxact:name>
						<ipxact:description>What else could be in this register??</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'hDEADBEEF</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>SSP_CFG</ipxact:name>
					<ipxact:displayName>SSP_CFG</ipxact:displayName>
					<ipxact:description>Secondary Sampling Point configuration register. Used by transmitter in data bit rate for calculation of Secondary Sampling Point. This register should be modified only when SETTINGS[ENA]=0.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h82</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>SSP_OFFSET</ipxact:name>
						<ipxact:description>Secondary sampling point offset. Value is given as multiple of Minimal Data Time Quanta.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>10</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>7</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>SSP_SRC</ipxact:name>
						<ipxact:description>Source of Secondary Sampling Point.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>2</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>SSP_SRC_OFFSET</ipxact:name>
								<ipxact:displayName>SSP_SRC_OFFSET</ipxact:displayName>
								<ipxact:description>SSP position = SSP_Offset. Measured value is ignored.</ipxact:description>
								<ipxact:value>2</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>SSP_SRC_MEAS_N_OFFSET</ipxact:name>
								<ipxact:displayName>SSP_SRC_MEAS_N_OFFSET</ipxact:displayName>
								<ipxact:description>SSP position = TRV_DELAY (Measured Value) + SSP_OFFSET.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>SSP_SRC_NO_SSP</ipxact:name>
								<ipxact:displayName>SSP_SRC_NO_SSP</ipxact:displayName>
								<ipxact:description>SSP is not used. Transmitter uses regular Sampling Point during Data Bit-Rate.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>DEBUG_REGISTER</ipxact:name>
					<ipxact:displayName>DEBUG_REGISTER</ipxact:displayName>
					<ipxact:description>Register for reading out state of the controller. This register is only for debugging purposes!</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h8C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>STUFF_COUNT</ipxact:name>
						<ipxact:description>Actual stuff count modulo 8 as definned in ISO FD protocol. Stuff count is erased in the beginning of the frame and increased by one with each stuff bit until STUFF count field in ISO FD CRC. Then it stays fixed until the beginning of next frame. In non-ISO FD or normal CAN stuff bits are counted until the end of a frame. Note that this field is NOT gray encoded as defined in ISO FD standard. Stuff count is calculated only as long as controller is transceiving on the bus. During the reception this value remains fixed!</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DESTUFF_COUNT</ipxact:name>
						<ipxact:description>Actual de-stuff count modulo 8 as defined in ISO FD protocol. De-Stuff count is erased in the beginning of the frame and increased by one with each de-stuffed bit until STUFF count field in ISO FD CRC. Then it stays fixed until beginning of next frame. In non-ISO FD or normal CAN de-stuff bits are counted until the end of the frame. Note that this field is NOT grey encoded as defined in ISO FD standard. De-stuff count is calculated in both. Transceiver as well as receiver.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_ARB</ipxact:name>
						<ipxact:description>Protocol control State machine is in Arbitration field.</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_ACKD</ipxact:name>
						<ipxact:description>Protocol control State machine is in ACK Delimiter field.</ipxact:description>
						<ipxact:bitOffset>13</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_ACK</ipxact:name>
						<ipxact:description>Protocol control State machine is in ACK field.</ipxact:description>
						<ipxact:bitOffset>12</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_CRCD</ipxact:name>
						<ipxact:description>Protocol control State machine is in CRC Delimiter field.</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_STC</ipxact:name>
						<ipxact:description>Protocol control State machine is in Stuff Count field.</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_CON</ipxact:name>
						<ipxact:description>Protocol control State machine is in Control field.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_DAT</ipxact:name>
						<ipxact:description>Protocol control State machine is in Data field.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_CRC</ipxact:name>
						<ipxact:description>Protocol control State machine is in CRC field.</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_EOF</ipxact:name>
						<ipxact:description>Protocol control State machine is in End of file field.</ipxact:description>
						<ipxact:bitOffset>14</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_SUSP</ipxact:name>
						<ipxact:description>Protocol control State machine is in Suspend transmission field.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_OVR</ipxact:name>
						<ipxact:description>Protocol control State machine is in Overload field.</ipxact:description>
						<ipxact:bitOffset>17</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PC_INT</ipxact:name>
						<ipxact:description>Protocol control State machine is in Intermission field.</ipxact:description>
						<ipxact:bitOffset>15</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TX_FR_CTR</ipxact:name>
					<ipxact:displayName>TX_FR_CTR</ipxact:displayName>
					<ipxact:description>Bus traffic TX counter.</ipxact:description>
					<ipxact:isPresent>uuid_db903261_61eb_4f15_8155_5b14164c20b0</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h88</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TX_FR_CTR_VAL</ipxact:name>
						<ipxact:description>Number of transmitted frames by CTU CAN FD.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_FR_CTR</ipxact:name>
					<ipxact:displayName>RX_FR_CTR</ipxact:displayName>
					<ipxact:description>Bus traffic RX counter.</ipxact:description>
					<ipxact:isPresent>uuid_db903261_61eb_4f15_8155_5b14164c20b0</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h84</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RX_FR_CTR_VAL</ipxact:name>
						<ipxact:description>Number of received frames by CTU CAN FD.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>ERR_CAPT</ipxact:name>
					<ipxact:displayName>ERR_CAPT</ipxact:displayName>
					<ipxact:description>Error code Capture register. Determines position within CAN frame where last error was detected.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h7C</ipxact:addressOffset>
					<ipxact:size>8</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>ERR_POS</ipxact:name>
						<ipxact:displayName>ERR_POS</ipxact:displayName>
						<ipxact:description>Position of last error.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h1F</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>5</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_SOF</ipxact:name>
								<ipxact:displayName>ERC_POS_SOF</ipxact:displayName>
								<ipxact:description>Error in Start of Frame</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_ARB</ipxact:name>
								<ipxact:displayName>ERC_POS_ARB</ipxact:displayName>
								<ipxact:description>Error in Arbitration Filed</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_ERR</ipxact:name>
								<ipxact:displayName>ERC_POS_ERR</ipxact:displayName>
								<ipxact:description>Error during Error frame</ipxact:description>
								<ipxact:value>7</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_OVRL</ipxact:name>
								<ipxact:displayName>ERC_POS_OVRL</ipxact:displayName>
								<ipxact:description>Error in Overload frame</ipxact:description>
								<ipxact:value>8</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_CTRL</ipxact:name>
								<ipxact:displayName>ERC_POS_CTRL</ipxact:displayName>
								<ipxact:description>Error in Control field</ipxact:description>
								<ipxact:value>2</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_OTHER</ipxact:name>
								<ipxact:displayName>ERC_POS_OTHER</ipxact:displayName>
								<ipxact:description>Other position of error</ipxact:description>
								<ipxact:value>'h1F</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_DATA</ipxact:name>
								<ipxact:displayName>ERC_POS_DATA</ipxact:displayName>
								<ipxact:description>Error in Data Field</ipxact:description>
								<ipxact:value>3</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_CRC</ipxact:name>
								<ipxact:displayName>ERC_POS_CRC</ipxact:displayName>
								<ipxact:description>Error in CRC Field</ipxact:description>
								<ipxact:value>4</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_INTF</ipxact:name>
								<ipxact:displayName>ERC_POS_INTF</ipxact:displayName>
								<ipxact:description>Error in interframe space</ipxact:description>
								<ipxact:value>6</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_POS_ACK</ipxact:name>
								<ipxact:displayName>ERC_POS_ACK</ipxact:displayName>
								<ipxact:description>Error in Acknowledge field or CRC delimiter</ipxact:description>
								<ipxact:value>5</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ERR_TYPE</ipxact:name>
						<ipxact:displayName>ERR_TYPE</ipxact:displayName>
						<ipxact:description>Type of last error.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>3</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_BIT_ERR</ipxact:name>
								<ipxact:displayName>ERC_BIT_ERR</ipxact:displayName>
								<ipxact:description>Bit Error</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_CRC_ERR</ipxact:name>
								<ipxact:displayName>ERC_CRC_ERR</ipxact:displayName>
								<ipxact:description>CRC Error</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_FRM_ERR</ipxact:name>
								<ipxact:displayName>ERC_FRM_ERR</ipxact:displayName>
								<ipxact:description>Form Error</ipxact:description>
								<ipxact:value>2</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_ACK_ERR</ipxact:name>
								<ipxact:displayName>ERC_ACK_ERR</ipxact:displayName>
								<ipxact:description>Acknowledge Error</ipxact:description>
								<ipxact:value>3</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ERC_STUF_ERR</ipxact:name>
								<ipxact:displayName>ERC_STUF_ERR</ipxact:displayName>
								<ipxact:description>Stuff Error</ipxact:description>
								<ipxact:value>4</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TX_STATUS</ipxact:name>
					<ipxact:displayName>TX_STATUS</ipxact:displayName>
					<ipxact:description>Status of TXT buffers. </ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h70</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TX2S</ipxact:name>
						<ipxact:displayName>TX1S</ipxact:displayName>
						<ipxact:description>Status of TXT Buffer 2. Bit field meaning is analogous to TX1S.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h8</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>4</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TX1S</ipxact:name>
						<ipxact:displayName>TX2S</ipxact:displayName>
						<ipxact:description>Status of TXT Buffer 1.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h8</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>4</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_ETY</ipxact:name>
								<ipxact:displayName>TXT_EMPTY</ipxact:displayName>
								<ipxact:description>TXT Buffer is  empty.</ipxact:description>
								<ipxact:value>'h8</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_TOK</ipxact:name>
								<ipxact:displayName>TXT_OK</ipxact:displayName>
								<ipxact:description>Transmission from TXT Buffer finished OK.</ipxact:description>
								<ipxact:value>'h4</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_ERR</ipxact:name>
								<ipxact:displayName>TXT_ERR</ipxact:displayName>
								<ipxact:description>Transmission from TXT Buffer failed.</ipxact:description>
								<ipxact:value>'h6</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_ABT</ipxact:name>
								<ipxact:displayName>TXT_ABT</ipxact:displayName>
								<ipxact:description>Transmission from TXT Buffer was aborted by SW.</ipxact:description>
								<ipxact:value>'h7</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_TRAN</ipxact:name>
								<ipxact:displayName>TXT_TRAN</ipxact:displayName>
								<ipxact:description>Transmission from TXT Buffer is in progress.</ipxact:description>
								<ipxact:value>'h2</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_ABTP</ipxact:name>
								<ipxact:displayName>TXT_ABTP</ipxact:displayName>
								<ipxact:description>Transmission from TXT Buffer is in progress, stop trying at nearest error frame or arbitration lost.</ipxact:description>
								<ipxact:value>'h3</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue usage="read">
								<ipxact:name>TXT_RDY</ipxact:name>
								<ipxact:displayName>TXT_RDY</ipxact:displayName>
								<ipxact:description>TXT Buffer is ready to be selected for transmission by the CAN Core.</ipxact:description>
								<ipxact:value>'h1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TX3S</ipxact:name>
						<ipxact:description>Status of TXT Buffer 3. Bit field meaning is analogous to TX1S.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h8</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>4</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>TX4S</ipxact:name>
						<ipxact:description>Status of TXT Buffer 4. Bit field meaning is analogous to TX1S.</ipxact:description>
						<ipxact:bitOffset>12</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>'h8</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>4</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TRV_DELAY</ipxact:name>
					<ipxact:displayName>TRV_DELAY</ipxact:displayName>
					<ipxact:description>Transceiver Delay register. When transmitting CAN FD Frame, Transceiver delay is measured. After the measurement (after FDF bit), it can be read out from this register. The value in this register is valid since first transmission of CAN FD frame with bit rate shift. After each next measurement the value is updated.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h80</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TRV_DELAY_VALUE</ipxact:name>
						<ipxact:displayName>TRV_DELAY_VALUE</ipxact:displayName>
						<ipxact:description>Measured Transceiver Delay in multiple of Minimal Time Quanta.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>7</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_DATA</ipxact:name>
					<ipxact:displayName>RX_DATA</ipxact:displayName>
					<ipxact:description>Read data from RX buffer.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h6C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RX_DATA</ipxact:name>
						<ipxact:displayName>RX_DATA</ipxact:displayName>
						<ipxact:description>RX buffer data at read pointer position in FIFO. By reading from this register read pointer is automatically increased, as long as there is next data word stored in RX buffer. Next read from this register returns next word of CAN frame. First stored word in the buffer is FRAME_FORM, next TIMESTAMP_U etc. This register shall be read by 32 bit access.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>32</ipxact:bitWidth>
						<ipxact:readAction>modify</ipxact:readAction>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_POINTERS</ipxact:name>
					<ipxact:displayName>RX_POINTERS</ipxact:displayName>
					<ipxact:description>Pointers in RX buffer FIFO.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h64</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RX_WPP</ipxact:name>
						<ipxact:displayName>RX_WP</ipxact:displayName>
						<ipxact:description>Write pointer position in RX buffer. Upon store of received frame write pointer is updated.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RX_RPP</ipxact:name>
						<ipxact:displayName>RX_RPP</ipxact:displayName>
						<ipxact:description>Read pointer position in RX buffer. Upon read of received frame read pointer is updated.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>12</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_MEM_INFO</ipxact:name>
					<ipxact:displayName>RX_MEM_INFO</ipxact:displayName>
					<ipxact:description>RX buffer FIFO memory information register.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h60</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RX_BUFF_SIZE</ipxact:name>
						<ipxact:displayName>RX_BUFF_SIZE_VALUE</ipxact:displayName>
						<ipxact:description>Size of RX buffer in 32-bit words.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>13</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RX_MEM_FREE</ipxact:name>
						<ipxact:displayName>RX_MEM_FREE</ipxact:displayName>
						<ipxact:description>Number of free 32 bit words in RX buffer.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:bitWidth>13</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>RX_STATUS</ipxact:name>
					<ipxact:displayName>RX_STATUS</ipxact:displayName>
					<ipxact:description>Status register of RX buffer FIFO.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h68</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>RXE</ipxact:name>
						<ipxact:displayName>RXE</ipxact:displayName>
						<ipxact:description>RX buffer is empty. There is no CAN Frame stored in it.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RXF</ipxact:name>
						<ipxact:displayName>RXF</ipxact:displayName>
						<ipxact:description>RX buffer is full.</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RXFRC</ipxact:name>
						<ipxact:displayName>RXFRC</ipxact:displayName>
						<ipxact:description>RX buffer frame count. Number of CAN Frames stored in RX buffer.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>11</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_CONTROL</ipxact:name>
					<ipxact:displayName>FILTER_CONTROL</ipxact:displayName>
					<ipxact:description>Filter control register. Configures Frame filters to accept only selected frame types. Every bit is active in logic 1.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h5C</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>FANB</ipxact:name>
						<ipxact:displayName>FILT_A_BASIC</ipxact:displayName>
						<ipxact:description>CAN Basic Frame is accepted by filter A.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FAFB</ipxact:name>
						<ipxact:displayName>FILT_A_FD_BAS</ipxact:displayName>
						<ipxact:description>CAN FD Basic Frame is accepted by filter A.</ipxact:description>
						<ipxact:bitOffset>2</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FANE</ipxact:name>
						<ipxact:displayName>FILT_A_EXT</ipxact:displayName>
						<ipxact:description>CAN Extended Frame is accepted by Filter A.</ipxact:description>
						<ipxact:bitOffset>1</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FAFE</ipxact:name>
						<ipxact:displayName>FILT_A_FD_EXT</ipxact:displayName>
						<ipxact:description>CAN FD Extended Frame is accepted by filter A.</ipxact:description>
						<ipxact:bitOffset>3</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>1</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FBNB</ipxact:name>
						<ipxact:displayName>FILT_B_BASIC</ipxact:displayName>
						<ipxact:description>CAN Basic Frame is accepted by filter B.</ipxact:description>
						<ipxact:bitOffset>4</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FBNE</ipxact:name>
						<ipxact:displayName>FILT_B_EXT</ipxact:displayName>
						<ipxact:description>CAN Extended Frame is accepted by Filter B.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FBFB</ipxact:name>
						<ipxact:displayName>FILT_B_FD_BAS</ipxact:displayName>
						<ipxact:description>CAN FD Basic Frame is accepted by filter B.</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FBFE</ipxact:name>
						<ipxact:displayName>FILT_B_FD_EXT</ipxact:displayName>
						<ipxact:description>CAN FD Extended Frame is accepted by filter B.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FCNB</ipxact:name>
						<ipxact:displayName>FILT_C_BASIC</ipxact:displayName>
						<ipxact:description>CAN Basic Frame is accepted by filter C.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FCNE</ipxact:name>
						<ipxact:displayName>FILT_C_EXT</ipxact:displayName>
						<ipxact:description>CAN Extended Frame is accepted by Filter C.</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FCFB</ipxact:name>
						<ipxact:displayName>FILT_C_FD_BAS</ipxact:displayName>
						<ipxact:description>CAN FD Basic Frame is accepted by filter C.</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FRFE</ipxact:name>
						<ipxact:displayName>FILT_RANGE_FD_EXT</ipxact:displayName>
						<ipxact:description>CAN FD Extended Frame is accepted by Range filter.</ipxact:description>
						<ipxact:bitOffset>15</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FRFB</ipxact:name>
						<ipxact:displayName>FILT_RANGE_FD_BAS</ipxact:displayName>
						<ipxact:description>CAN FD Basic Frame is accepted by Range filter.</ipxact:description>
						<ipxact:bitOffset>14</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FRNE</ipxact:name>
						<ipxact:displayName>FILT_RANGE_EXT</ipxact:displayName>
						<ipxact:description>CAN Extended Frame is accepted by Range filter.</ipxact:description>
						<ipxact:bitOffset>13</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FRNB</ipxact:name>
						<ipxact:displayName>FILT_RANGE_BASIC</ipxact:displayName>
						<ipxact:description>CAN Basic Frame is accepted by Range filter.</ipxact:description>
						<ipxact:bitOffset>12</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FCFE</ipxact:name>
						<ipxact:displayName>FILT_C_FD_EXT</ipxact:displayName>
						<ipxact:description>CAN FD Extended Frame is accepted by filter C.</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_RAN_HIGH</ipxact:name>
					<ipxact:displayName>FILTER_RAN_HIGH</ipxact:displayName>
					<ipxact:description>Filter Range High threshold. The identifier format is the same as transmitted and received identifier format. BASE Identifier is in bits 28 : 18 and Identifier extension are bits 17 : 0. If Range filter is not supported, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_41f98f04_041f_4ab6_b60d_c6226cd54eb6</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h58</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_RAN_HIGH_VAL</ipxact:name>
						<ipxact:displayName>BIT_RAN_HIGH_VAL</ipxact:displayName>
						<ipxact:description>High threshold value</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_RAN_LOW</ipxact:name>
					<ipxact:displayName>FILTER_RAN_LOW</ipxact:displayName>
					<ipxact:description>Filter Range Low threshold. The identifier format is the same as transmitted and received identifier format. BASE Identifier is in bits 28 : 18 and Identifier extension are bits 17 : 0. If Range filter is not supported, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_41f98f04_041f_4ab6_b60d_c6226cd54eb6</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h54</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_RAN_LOW_VAL</ipxact:name>
						<ipxact:displayName>BIT_RAN_LOW_VAL</ipxact:displayName>
						<ipxact:description>Low threshold value</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_C_VAL</ipxact:name>
					<ipxact:displayName>FILTER_C_VAL</ipxact:displayName>
					<ipxact:description>Filter C Bit value. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter C is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_d4ccabd1_3f50_49b0_ae1e_45cf5fdb460e</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h50</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_VAL_C_VAL</ipxact:name>
						<ipxact:displayName>BIT_VAL_C_VAL</ipxact:displayName>
						<ipxact:description>Bit Value for acceptance filters to be compared with income identifier. Only bits set in according to FILTER_C_MASK register are compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_C_MASK</ipxact:name>
					<ipxact:displayName>FILTER_C_MASK</ipxact:displayName>
					<ipxact:description>Filter C Bit mask. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter C is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_d4ccabd1_3f50_49b0_ae1e_45cf5fdb460e</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_MASK_C_VAL</ipxact:name>
						<ipxact:displayName>BIT_MASK_C_VAL</ipxact:displayName>
						<ipxact:description>Bit mask for acceptance filters. Logic 1 indicates this bit of Income identifier is compared with the same bit in FILTER_C_VALUE. Logic 0 indicates this bit is not compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_B_VAL</ipxact:name>
					<ipxact:displayName>FILTER_B_VAL</ipxact:displayName>
					<ipxact:description>Filter B Bit value. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter B is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_ee0c8305_bed6_412e_8743_8e3657e8b866</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h48</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_VAL_B_VAL</ipxact:name>
						<ipxact:displayName>BIT_VAL_B_VAL</ipxact:displayName>
						<ipxact:description>Bit Value for acceptance filters to be compared with income identifier. Only bits set in according to FILTER_B_MASK register are compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_B_MASK</ipxact:name>
					<ipxact:displayName>FILTER_B_MASK</ipxact:displayName>
					<ipxact:description>Filter B Bit mask. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter B is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_ee0c8305_bed6_412e_8743_8e3657e8b866</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h44</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_MASK_B_VAL</ipxact:name>
						<ipxact:displayName>BIT_MASK_B_VAL</ipxact:displayName>
						<ipxact:description>Bit mask for acceptance filters. Logic 1 indicates this bit of Income identifier is compared with the same bit in FILTER_B_VALUE. Logic 0 indicates this bit is not compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>FILTER_A_MASK</ipxact:name>
					<ipxact:displayName>FILTER_A_MASK</ipxact:displayName>
					<ipxact:description>Filter A Bit mask. The identifier format is the same as transmitted and received Identifier. BASE Identifier is 11 LSB and Identifier extension are bits 28-12. If filter A is not present, writes to this register have no effect and read will return all zeroes.</ipxact:description>
					<ipxact:isPresent>uuid_09846e1a_b03a_4f0b_99b5_c1981400ea9e</ipxact:isPresent>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h3C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-write</ipxact:access>
					<ipxact:field>
						<ipxact:name>BIT_MASK_A_VAL</ipxact:name>
						<ipxact:displayName>BIT_MASK_A_VAL</ipxact:displayName>
						<ipxact:description>Bit mask for acceptance filters. Logic 1 indicates this bit of Income identifier is compared with the same bit in FILTER_A_VALUE. Logic 0 indicates this bit is not compared.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>29</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>CTR_PRES</ipxact:name>
					<ipxact:displayName>CTR_PRES</ipxact:displayName>
					<ipxact:description>Counter Preset Register. Error counters can be modified via this register.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h38</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>write-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>CTPV</ipxact:name>
						<ipxact:displayName>CTPV</ipxact:displayName>
						<ipxact:description>Counter value to set.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>9</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PTX</ipxact:name>
						<ipxact:displayName>PTX</ipxact:displayName>
						<ipxact:description>Preset value from CTPV to TX Error counter (TEC).</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>PRX</ipxact:name>
						<ipxact:displayName>PRX</ipxact:displayName>
						<ipxact:description>Preset value from CTPV to RX Error counter (REC).</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ENORM</ipxact:name>
						<ipxact:displayName>ENORM</ipxact:displayName>
						<ipxact:description>Erase Nominal bit rate error counter (ERR_NORM).</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>EFD</ipxact:name>
						<ipxact:displayName>EFD</ipxact:displayName>
						<ipxact:description>Erase Data bit rate error counter (ERR_FD).</ipxact:description>
						<ipxact:bitOffset>12</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:modifiedWriteValue>clear</ipxact:modifiedWriteValue>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>ERR_FD</ipxact:name>
					<ipxact:displayName>ERR_FD</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h36</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>ERR_FD_VAL</ipxact:name>
						<ipxact:displayName>ERR_FD_VAL</ipxact:displayName>
						<ipxact:description>Number of errors which occured in data bit rate.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>16</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>ERR_NORM</ipxact:name>
					<ipxact:displayName>ERR_NORM</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h34</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>ERR_NORM_VAL</ipxact:name>
						<ipxact:displayName>ERR_NORM_VAL</ipxact:displayName>
						<ipxact:description>Number of errors which occured in nominal bit rate.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>16</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TEC</ipxact:name>
					<ipxact:displayName>TXC</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h32</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>TEC_VAL</ipxact:name>
						<ipxact:description>TX error counter (TEC).</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>9</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>REC</ipxact:name>
					<ipxact:displayName>RXC</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h30</ipxact:addressOffset>
					<ipxact:size>16</ipxact:size>
					<ipxact:volatile>true</ipxact:volatile>
					<ipxact:access>read-only</ipxact:access>
					<ipxact:field>
						<ipxact:name>REC_VAL</ipxact:name>
						<ipxact:displayName>RXC_VAL</ipxact:displayName>
						<ipxact:description>RX error counter (REC).</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:resets>
							<ipxact:reset>
								<ipxact:value>0</ipxact:value>
							</ipxact:reset>
						</ipxact:resets>
						<ipxact:bitWidth>9</ipxact:bitWidth>
						<ipxact:access>read-only</ipxact:access>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressBlock>
				<ipxact:name>TX_Buffer_1</ipxact:name>
				<ipxact:displayName>TXT Buffer 1</ipxact:displayName>
				<ipxact:description>Access to this memory region is mapped to TXT buffer 1.  CAN FD frame for transmittion can be inserted to this buffer. The frame layout corresponds to the layout described in Chapter &quot;CAN FD frame format&quot;. First adress in this region (TXTB1_DATA_1) corresponds to FRAME_FORMAT_W, second address (TXTB1_DATA_2) corresponds to IDENTIFIER_W etc. The last address (TXTB1_DATA_20) corresponds to DATA_61_64_W. The adresses in between correspond linearly. This memory region is write only and read access will return all zeroes. This region supports only 32 bit access. This region is write only.</ipxact:description>
				<ipxact:baseAddress>'h100</ipxact:baseAddress>
				<ipxact:range>256</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:usage>memory</ipxact:usage>
				<ipxact:volatile>true</ipxact:volatile>
				<ipxact:register>
					<ipxact:name>TXTB1_DATA_1</ipxact:name>
					<ipxact:displayName>TX_DATA_1</ipxact:displayName>
					<ipxact:description>This adress word corresponds to FRAME_FORM word</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB1_DATA_1</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB1_DATA_2</ipxact:name>
					<ipxact:displayName>TX_DATA_2</ipxact:displayName>
					<ipxact:description>This adress word corresponds to IDENTIFIER word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB1_DATA_2</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB1_DATA_20</ipxact:name>
					<ipxact:displayName>TX_DATA_20</ipxact:displayName>
					<ipxact:description>This adress word corresponds to DATA_61_64 word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB1_DATA_20</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressBlock>
				<ipxact:name>TX_Buffer_2</ipxact:name>
				<ipxact:displayName>TXT Buffer 2</ipxact:displayName>
				<ipxact:description>Access to this memory region is mapped to TXT buffer 2.  CAN FD frame for transmittion can be inserted to this buffer. The frame layout corresponds to the layout described in Chapter &quot;CAN FD frame format&quot;. First adress in this region (TXTB2_DATA_1) corresponds to FRAME_FORMAT_W, second address (TXTB2_DATA_2) corresponds to IDENTIFIER_W etc. The last address (TXTB2_DATA_20) corresponds to DATA_61_64_W. The adresses in between correspond linearly. This memory region is write only and read access will return all zeroes. This region supports only 32 bit access.</ipxact:description>
				<ipxact:baseAddress>'h200</ipxact:baseAddress>
				<ipxact:range>256</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:usage>memory</ipxact:usage>
				<ipxact:volatile>true</ipxact:volatile>
				<ipxact:register>
					<ipxact:name>TXTB2_DATA_1</ipxact:name>
					<ipxact:description>This adress word corresponds to FRAME_FORM word</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB2_DATA_1</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB2_DATA_2</ipxact:name>
					<ipxact:description>This adress word corresponds to IDENTIFIER word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB2_DATA_2</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB2_DATA_20</ipxact:name>
					<ipxact:description>This adress word corresponds to DATA_61_64 word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB2_DATA_20</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressBlock>
				<ipxact:name>TX_Buffer_3</ipxact:name>
				<ipxact:displayName>TXT Buffer 3</ipxact:displayName>
				<ipxact:description>Access to this memory region is mapped to TXT buffer 3.  CAN FD frame for transmittion can be inserted to this buffer. The frame layout corresponds to the layout described in Chapter &quot;CAN FD frame format&quot;. First adress in this region (TXTB3_DATA_1) corresponds to FRAME_FORMAT_W, second address (TXTB3_DATA_2) corresponds to IDENTIFIER_W etc. The last address (TXTB2_DATA_20) corresponds to DATA_61_64_W. The adresses in between correspond linearly. This memory region is write only and read access will return all zeroes. This region supports only 32 bit access. This region is write only.</ipxact:description>
				<ipxact:baseAddress>'h300</ipxact:baseAddress>
				<ipxact:range>256</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:usage>memory</ipxact:usage>
				<ipxact:volatile>true</ipxact:volatile>
				<ipxact:register>
					<ipxact:name>TXTB3_DATA_1</ipxact:name>
					<ipxact:description>This adress word corresponds to FRAME_FORM word</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB3_DATA_1</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB3_DATA_2</ipxact:name>
					<ipxact:description>This adress word corresponds to IDENTIFIER word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB3_DATA_2</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB3_DATA_20</ipxact:name>
					<ipxact:description>This adress word corresponds to DATA_61_64 word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB3_DATA_20</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressBlock>
				<ipxact:name>TX_Buffer_4</ipxact:name>
				<ipxact:displayName>TXT Buffer 4</ipxact:displayName>
				<ipxact:description>Access to this memory region is mapped to TXT buffer 4.  CAN FD frame for transmittion can be inserted to this buffer. The frame layout corresponds to the layout described in Chapter &quot;CAN FD frame format&quot;. First adress in this region (TXTB4_DATA_1) corresponds to FRAME_FORMAT_W, second address (TXTB4_DATA_2) corresponds to IDENTIFIER_W etc. The last address (TXTB4_DATA_20) corresponds to DATA_61_64_W. The adresses in between correspond linearly. This memory region is write only and read access will return all zeroes. This region supports only 32 bit access. This region is write only.</ipxact:description>
				<ipxact:baseAddress>'h400</ipxact:baseAddress>
				<ipxact:range>256</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:usage>memory</ipxact:usage>
				<ipxact:volatile>true</ipxact:volatile>
				<ipxact:register>
					<ipxact:name>TXTB4_DATA_1</ipxact:name>
					<ipxact:description>This adress word corresponds to FRAME_FORM word</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB4_DATA_1</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB4_DATA_2</ipxact:name>
					<ipxact:description>This adress word corresponds to IDENTIFIER word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB4_DATA_2</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TXTB4_DATA_20</ipxact:name>
					<ipxact:description>This adress word corresponds to DATA_61_64 word.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TXTB4_DATA_20</ipxact:name>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressUnitBits>8</ipxact:addressUnitBits>
		</ipxact:memoryMap>
		<ipxact:memoryMap>
			<ipxact:name>CAN_Frame_format</ipxact:name>
			<ipxact:displayName>CAN FD frame format</ipxact:displayName>
			<ipxact:description>CAN Frame format describtion as it is stored in TXT Buffers and RX Buffer.</ipxact:description>
			<ipxact:addressBlock>
				<ipxact:name>CAN_FD_Frame_format</ipxact:name>
				<ipxact:displayName>CAN FD Frame format</ipxact:displayName>
				<ipxact:baseAddress>'h0</ipxact:baseAddress>
				<ipxact:range>80</ipxact:range>
				<ipxact:width>32</ipxact:width>
				<ipxact:register>
					<ipxact:name>FRAME_FORM_W</ipxact:name>
					<ipxact:displayName>FRAME_FORM_W</ipxact:displayName>
					<ipxact:description>Frame format word with CAN frame metadata.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h0</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>DLC</ipxact:name>
						<ipxact:displayName>DLC</ipxact:displayName>
						<ipxact:description>Data Length Code.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>4</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RTR</ipxact:name>
						<ipxact:displayName>RTR</ipxact:displayName>
						<ipxact:description>Logic 1 indicates Remote frame. Has meaning only for CAN frames. CAN FD does not have RTR frames.</ipxact:description>
						<ipxact:bitOffset>5</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>RTR_FRAME</ipxact:name>
								<ipxact:displayName>RTR_FRAME</ipxact:displayName>
								<ipxact:description>CAN frame is RTR frame.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>NO_RTR_FRAME</ipxact:name>
								<ipxact:displayName>NO_RTR_FRAME</ipxact:displayName>
								<ipxact:description>CAN frame is not RTR frame.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>IDE</ipxact:name>
						<ipxact:displayName>IDE</ipxact:displayName>
						<ipxact:description>Extended Identifier Type. Logic 1 indicates CAN frame with both Base identifier and Identifier extension. Logic 0 indicates CAN frame with only Base identifier.</ipxact:description>
						<ipxact:bitOffset>6</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>BASE</ipxact:name>
								<ipxact:displayName>BASE</ipxact:displayName>
								<ipxact:description>Frame Identifier is Basic (11 bits)</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>EXTENDED</ipxact:name>
								<ipxact:displayName>EXTENDED</ipxact:displayName>
								<ipxact:description>Frame Identifier is Extended (11 + 18 bits)</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>FDF</ipxact:name>
						<ipxact:displayName>FDF</ipxact:displayName>
						<ipxact:description>Flexible Data-rate Format. Distinguishes between CAN 2.0 and CAN FD Frames.</ipxact:description>
						<ipxact:bitOffset>7</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>NORMAL_CAN</ipxact:name>
								<ipxact:displayName>NORMAL_CAN</ipxact:displayName>
								<ipxact:description>Frame is CAN frame.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>FD_CAN</ipxact:name>
								<ipxact:displayName>FD_CAN</ipxact:displayName>
								<ipxact:description>Frame is CAN FD frame.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>BRS</ipxact:name>
						<ipxact:displayName>BRS</ipxact:displayName>
						<ipxact:description>Bit Rate Shift. In case of CAN FD frames indicates whether bit rate is shifted CAN FD frame. This bit has no meaning for CAN frames.</ipxact:description>
						<ipxact:bitOffset>9</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>BR_SHIFT</ipxact:name>
								<ipxact:displayName>BR_SHIFT</ipxact:displayName>
								<ipxact:description>Bit rate should be shifted if frame is CAN FD frame.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>BR_NO_SHIFT</ipxact:name>
								<ipxact:displayName>BR_NO_SHIFT</ipxact:displayName>
								<ipxact:description>Bit rate should not be shifted if frame is CAN FD frame.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>ESI_RSV</ipxact:name>
						<ipxact:displayName>ESI_RSV</ipxact:displayName>
						<ipxact:description>Error State Indicator bit for received CAN FD frames. Bit has no meaning for CAN frames nor for transmitted CAN FD frames (in TXT buffer).</ipxact:description>
						<ipxact:bitOffset>10</ipxact:bitOffset>
						<ipxact:bitWidth>1</ipxact:bitWidth>
						<ipxact:enumeratedValues>
							<ipxact:enumeratedValue>
								<ipxact:name>ESI_ERR_ACTIVE</ipxact:name>
								<ipxact:displayName>ESI_ERR_ACTIVE</ipxact:displayName>
								<ipxact:description>Transmitted of received CAN FD frame is error active.</ipxact:description>
								<ipxact:value>0</ipxact:value>
							</ipxact:enumeratedValue>
							<ipxact:enumeratedValue>
								<ipxact:name>ESI_ERR_PASIVE</ipxact:name>
								<ipxact:displayName>ESI_ERR_PASSIVE</ipxact:displayName>
								<ipxact:description>Transmitted of received CAN FD frame is error passive.</ipxact:description>
								<ipxact:value>1</ipxact:value>
							</ipxact:enumeratedValue>
						</ipxact:enumeratedValues>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>RWCNT</ipxact:name>
						<ipxact:displayName>RWCNT</ipxact:displayName>
						<ipxact:description>Size of CAN frame in RX buffer without FRAME_FORMAT WORD. (E.g RTR frame RWCNT=3, 64 Byte FD frame RWCNT=19). In TXT buffer this field has no meaning.</ipxact:description>
						<ipxact:bitOffset>11</ipxact:bitOffset>
						<ipxact:bitWidth>5</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>IDENTIFIER_W</ipxact:name>
					<ipxact:displayName>IDENTIFIER_W</ipxact:displayName>
					<ipxact:description>CAN Identifier.</ipxact:description>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>IDENTIFIER_BASE</ipxact:name>
						<ipxact:description>Base Identifier of CAN frame.</ipxact:description>
						<ipxact:bitOffset>18</ipxact:bitOffset>
						<ipxact:bitWidth>11</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>IDENTIFIER_EXT</ipxact:name>
						<ipxact:description>Extended Identifier of CAN frame. Has meaning only if IDE of FRAME_FORMAT_W is EXTENDED.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>18</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TIMESTAMP_L_W</ipxact:name>
					<ipxact:displayName>TIMESTAMP_L_W</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h8</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TIME_STAMP_31_0</ipxact:name>
						<ipxact:displayName>TIME_STAMP_31_0</ipxact:displayName>
						<ipxact:description>Lower 32 bits of timestamp when the frame should be transmitted or when it was received.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>TIMESTAMP_U_W</ipxact:name>
					<ipxact:displayName>TIMESTAMP_U_W</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'hC</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>TIMESTAMP_L_W</ipxact:name>
						<ipxact:displayName>TIMESTAMP_L_W</ipxact:displayName>
						<ipxact:description>Upper 32 bits of timestamp when the frame should be transmitted or when it was received.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>32</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>DATA_1_4_W</ipxact:name>
					<ipxact:displayName>DATA_1_4_W</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h10</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>DATA_1</ipxact:name>
						<ipxact:description>Data byte 1 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_2</ipxact:name>
						<ipxact:description>Data byte 2 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_3</ipxact:name>
						<ipxact:description>Data byte 3 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_4</ipxact:name>
						<ipxact:description>Data byte 4 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>24</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>DATA_61_64_W</ipxact:name>
					<ipxact:displayName>DATA_61_64_W</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h4C</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>DATA_61</ipxact:name>
						<ipxact:description>Data byte 61 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_62</ipxact:name>
						<ipxact:description>Data byte 62 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_63</ipxact:name>
						<ipxact:description>Data byte 63 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_64</ipxact:name>
						<ipxact:description>Data byte 64 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>24</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
				<ipxact:register>
					<ipxact:name>DATA_5_8_W</ipxact:name>
					<ipxact:displayName>DATA_5_8_W</ipxact:displayName>
					<ipxact:dim>0</ipxact:dim>
					<ipxact:addressOffset>'h14</ipxact:addressOffset>
					<ipxact:size>32</ipxact:size>
					<ipxact:field>
						<ipxact:name>DATA_5</ipxact:name>
						<ipxact:description>Data byte 5 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>0</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_6</ipxact:name>
						<ipxact:description>Data byte 6 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>8</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_7</ipxact:name>
						<ipxact:description>Data byte 7 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>16</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
					<ipxact:field>
						<ipxact:name>DATA_8</ipxact:name>
						<ipxact:description>Data byte 8 of CAN Frame.</ipxact:description>
						<ipxact:bitOffset>24</ipxact:bitOffset>
						<ipxact:bitWidth>8</ipxact:bitWidth>
					</ipxact:field>
				</ipxact:register>
			</ipxact:addressBlock>
			<ipxact:addressUnitBits>8</ipxact:addressUnitBits>
		</ipxact:memoryMap>
	</ipxact:memoryMaps>
	<ipxact:description>CAN FD IP Core from Ondrej Ille written at Czech Technical University, department of Measurement.</ipxact:description>
	<ipxact:parameters>
		<ipxact:parameter kactus2:usageCount="2" parameterId="uuid_09846e1a_b03a_4f0b_99b5_c1981400ea9e">
			<ipxact:name>sup_filt_A</ipxact:name>
			<ipxact:displayName>sup_filt_A</ipxact:displayName>
			<ipxact:value>1</ipxact:value>
		</ipxact:parameter>
		<ipxact:parameter kactus2:usageCount="2" parameterId="uuid_41f98f04_041f_4ab6_b60d_c6226cd54eb6">
			<ipxact:name>sup_range</ipxact:name>
			<ipxact:displayName>sup_range</ipxact:displayName>
			<ipxact:value>1</ipxact:value>
		</ipxact:parameter>
		<ipxact:parameter kactus2:usageCount="2" parameterId="uuid_d4ccabd1_3f50_49b0_ae1e_45cf5fdb460e">
			<ipxact:name>sup_filt_C</ipxact:name>
			<ipxact:displayName>sup_filt_C</ipxact:displayName>
			<ipxact:value>1</ipxact:value>
		</ipxact:parameter>
		<ipxact:parameter kactus2:usageCount="2" parameterId="uuid_ee0c8305_bed6_412e_8743_8e3657e8b866">
			<ipxact:name>sup_filt_B</ipxact:name>
			<ipxact:displayName>sup_filt_B</ipxact:displayName>
			<ipxact:value>1</ipxact:value>
		</ipxact:parameter>
		<ipxact:parameter kactus2:usageCount="2" parameterId="uuid_db903261_61eb_4f15_8155_5b14164c20b0">
			<ipxact:name>sup_traffic_ctrs</ipxact:name>
			<ipxact:displayName>sup_traffic_ctrs</ipxact:displayName>
			<ipxact:value>1</ipxact:value>
		</ipxact:parameter>
	</ipxact:parameters>
	<ipxact:vendorExtensions>
		<kactus2:author>Ondrej Ille</kactus2:author>
		<kactus2:version>3,5,0,0</kactus2:version>
		<kactus2:kts_attributes>
			<kactus2:kts_productHier>IP</kactus2:kts_productHier>
			<kactus2:kts_implementation>HW</kactus2:kts_implementation>
			<kactus2:kts_firmness>Mutable</kactus2:kts_firmness>
		</kactus2:kts_attributes>
		<ipxact:regLocks>
			<ipxact:regLock name="CTR_PRES"/>
			<ipxact:regLock name="EWL"/>
			<ipxact:regLock name="ERP"/>
			<ipxact:Description>Register can be only written when MODE[TSTM] = 1, otherwise write has no effect.</ipxact:Description>
		</ipxact:regLocks>
		<kactus2:license>MIT</kactus2:license>
	</ipxact:vendorExtensions>
</ipxact:component>
